resources:
- repo: self

parameters:
- name: runCancel
  displayName: 'Run Cancel Tests?'
  type: boolean
  default: false
- name: environment
  displayName: 'Environment to Test'
  type: string
  default: 'prod'
  values:
    - 'uat'
    - 'prod'
    - 'all'

variables:
  RUN_CANCEL: ${{ lower(format('{0}', parameters.runCancel)) }}
  SELECTED_ENVIRONMENT: ${{ parameters.environment }}

trigger:
- main

stages:
  - stage: RunTests
    displayName: Run Tests
    pool:
      vmImage: 'ubuntu-latest'
    jobs:
    - job: RunAllTests
      displayName: 'Execute Tests'
      strategy:
        matrix:
          ${{ if eq(parameters.environment, 'all') }}:
          all:
            TEST_SCRIPT: ${{ if and(parameters.runCancel, eq(parameters.environment, 'all')) }}test:all:cancel${{ else }}test:all${{ endif }}
            ARTIFACT_NAME: playwright-report-all
          ${{ if eq(parameters.environment, 'uat') }}:
          uat:
            TEST_SCRIPT: ${{ if and(parameters.runCancel, eq(parameters.environment, 'uat')) }}test:uat:cancel${{ else }}test:uat${{ endif }}
            ARTIFACT_NAME: playwright-report-uat
          ${{ if eq(parameters.environment, 'prod') }}:
          prod:
            TEST_SCRIPT: ${{ if and(parameters.runCancel, eq(parameters.environment, 'prod')) }}test:prod:cancel${{ else }}test:prod${{ endif }}
            ARTIFACT_NAME: playwright-report-prod
        maxParallel: 2
      steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '18.x'
        displayName: 'Install Node.js'

      - script: |
          set -ex
          npm install
          npx playwright install
          npx playwright install-deps
        displayName: 'Install Playwright & Dependencies'
        workingDirectory: '$(Build.SourcesDirectory)'

      - script: |
          set -ex
          echo "Running tests for $(ENV_NAME) environment"
          # echo "Using base URL: $(BASE_URL)"
          npm run $(TEST_SCRIPT) --reporter=html
        displayName: 'Run $(ENV_NAME) Tests'
        workingDirectory: '$(Build.SourcesDirectory)'

      - publish: $(Build.SourcesDirectory)/playwright-report
        artifact: $(ARTIFACT_NAME)
        condition: always()